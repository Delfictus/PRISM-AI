# Dockerfile for PRISM-AI H100 Benchmark Runner
# Target: GCP with H100 GPUs
# Purpose: Official DIMACS/TSPLIB benchmark validation

# Use NVIDIA CUDA 12.3 base for H100 support (SM 9.0)
FROM nvidia/cuda:12.3.1-devel-ubuntu22.04

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# CUDA environment
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    pkg-config \
    libssl-dev \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Verify CUDA and check for H100
RUN nvcc --version
RUN nvidia-smi || echo "GPU detection will happen at runtime"

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN rustc --version && cargo --version

# Set working directory
WORKDIR /prism-ai

# Copy project files
COPY Cargo.toml Cargo.lock build.rs ./
COPY src ./src
COPY examples ./examples
COPY benchmarks ./benchmarks
COPY benches ./benches
COPY validation ./validation
COPY validation_env ./validation_env
COPY tests ./tests
COPY statistical_validation ./statistical_validation

# Build CUDA kernels with H100 architecture (SM 9.0)
# Also include SM 8.0, 8.6, 8.9 for compatibility
RUN echo "Building CUDA kernels for H100 (SM 9.0)..."

# Set CUDA compute capability for build (SM 9.0 for H100)
ENV CUDA_COMPUTE_CAP=90

# Build the project with CUDA features
# Note: Some build scripts check for nvidia-smi, will detect GPU at runtime
RUN cargo build --release --features cuda --lib || \
    (echo "Build may have warnings about GPU detection - this is normal in container build" && \
     cargo build --release --lib)

# Build benchmark examples
RUN cargo build --release --features cuda --example test_full_gpu
RUN cargo build --release --features cuda --example world_record_dashboard
RUN cargo build --release --features cuda --example test_mtx_parser

# Copy benchmark runner and entrypoint scripts
COPY docker/run_benchmarks.sh /usr/local/bin/run_benchmarks.sh
COPY docker/entrypoint.sh /entrypoint.sh

RUN chmod +x /usr/local/bin/run_benchmarks.sh
RUN chmod +x /entrypoint.sh

# Environment variables for runtime
ENV RUST_BACKTRACE=1
ENV RUST_LOG=info

# Labels
LABEL org.opencontainers.image.title="PRISM-AI H100 Benchmark"
LABEL org.opencontainers.image.description="Official DIMACS/TSPLIB benchmark runner for H100 GPUs"
LABEL org.opencontainers.image.version="0.2.0"
LABEL ai.prism.gpu.target="H100"
LABEL ai.prism.cuda="12.3"
LABEL ai.prism.compute.capability="9.0"

ENTRYPOINT ["/entrypoint.sh"]
CMD ["benchmark"]
